{"version":3,"sources":["defaultimgs.js","components/TweetInFeed.js","firebase.js","APIKEYS.js","pages/add-beat/AddBeat.js","pages/commons/CircularProgressWithLabel.js","pages/beats-list/play1.png","pages/beats-list/beat1.mp3","pages/beats-list/BeatsList.js","pages/landing-page/browse.png","pages/landing-page/1.png","pages/landing-page/join.gif","pages/landing-page/header.png","pages/landing-page/i01.svg","pages/landing-page/giphy-1.gif","pages/landing-page/i02.gif","pages/landing-page/i03.gif","pages/landing-page/Landing.js","pages/landing-page/LandingPage.js","images/avatar.png","pages/post-details/PostDetails.js","pages/Profile.js","pages/Settings.js","images/pfp1.png","images/pfp2.png","images/pfp3.png","images/pfp4.png","images/pfp5.png","images/logo_official.png","images/layout/navbar/Navbar.js","images/recent.png","images/recent2.png","connectors.js","App.js","reportWebVitals.js","index.js"],"names":["defaultImgs","TweetInFeed","profile","setCurrentPost","navigate","useNavigate","useState","tweetArr","setTweetArr","setLoading","useMoralis","Moralis","account","useNewMoralisObject","useEffect","a","Tweets","Object","extend","query","Query","equalTo","find","results","console","log","error","getTweets","useMoralisQuery","autoFetch","fetch","map","e","idx","className","Card","sx","minWidth","onClick","post","id","src","attributes","tweeterPfp","alt","tweeterUserName","slice","tweeterAcc","createdAt","toLocaleString","month","day","tweetTxt","tweetImg","fill","size","svg","reverse","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","AddBeat","image","setImage","petTypeRef","createRef","artistName","setArtistName","beatName","setBeatName","imageName","setImageName","imageType","setImageType","petType","setPetType","handleSubmit","event","preventDefault","client","NFTStorage","token","store","name","description","File","type","StylesProvider","injectFirst","Container","style","minHeight","paddingBottom","URL","createObjectURL","noValidate","autoComplete","accept","defaultValue","onChange","target","files","htmlFor","IconButton","color","component","TextField","fullWidth","label","variant","value","select","ref","MenuItem","Button","CircularProgressWithLabel","props","height","textAlign","justifyContent","paddingTop","Box","position","display","CircularProgress","width","top","left","bottom","right","alignItems","Typography","fontSize","Math","round","CircularStatic","progress","setPogress","timer","setInterval","prevProgress","clearInterval","protoTypes","PropTypes","number","isRequired","BeatsList","beatsData","setBeatsData","loading","loadBeats","headers","Authorization","limit","cids","json","temp","cid","data","getImage","ipfsURL","split","created","push","playAudio","Audio","beat1","play","backgroundColor","flexGrow","Grid","container","spacing","length","pet","index","item","xs","sm","ImageListItem","listStyle","ImageListItemBar","title","subtitle","actionIcon","play1","Landing","maxWidth","Paper","join","start","i02","i03","LandingPage","img","class","browse","align","PostDetails","contractData","currentPost","udUser","tweet","setTweet","updateComment","postId","current","first","t","arr","comments","unshift","set","save","paddingRight","fontWeight","guestImg","p","ind","Link","to","Profile","user","User","banner","pfp","username","ethAddress","bio","Settings","pfps","setPfps","selectedPFP","setSelectedPFP","inputFile","useRef","selectedFile","setSelectedFile","theFile","setTheFile","setUsername","setBio","isAuthenticated","Web3Api","useMoralisWeb3Api","fetchNFTs","options","chain","address","getNFTs","mumbaiNFTs","images","result","url","JSON","parse","metadata","includes","replace","saveEdits","myDetails","file","saveIPFS","ipfs","window","location","reload","labelBgColor","i","click","Component","Navbar","connectWallet","userLogOut","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","renderMobileMenu","Badge","badgeContent","currentTarget","AppBar","Toolbar","endIcon","useLocation","params","useParams","router","UAuthMoralisConnector","setUAuthOptions","clientID","redirectUri","scope","connectors","injected","walletconnect","provider","uauth","connector","App","logout","authenticate","uauthMoralisConnector","setudUser","setWallet","setUserInfo","getUdNameLocal","localStorage","getItem","unstoppableLogin","UAuth","userLogIn","loginWithPopup","userUnstopple","domainDetials","udName","sub","wallet","wallet_address","setItem","removeItem","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.1562f315.chunk.js","sourcesContent":["export const defaultImgs = [\n  \"https://ipfs.moralis.io:2053/ipfs/QmNgA9MNWFfRaoKzBt21VghQopnKXBgVxzyGvv5qjsV4Vw/media/1\",\n  \"https://ipfs.moralis.io:2053/ipfs/QmNgA9MNWFfRaoKzBt21VghQopnKXBgVxzyGvv5qjsV4Vw/media/2\",\n];\n","import React from 'react'\nimport './TweetInFeed.css'\nimport { defaultImgs } from '../defaultimgs'\nimport { Icon } from 'web3uikit'\nimport { useMoralis, useNewMoralisObject, useMoralisQuery } from 'react-moralis'\nimport { useEffect, useState } from 'react'\nimport { Card } from '@material-ui/core'\nimport { useNavigate } from 'react-router-dom'\nimport { async } from '@firebase/util'\n\nconst TweetInFeed = ({ profile, setCurrentPost }) => {\n  const navigate = useNavigate()\n  const [tweetArr, setTweetArr] = useState()\n  const [loading, setLoading] = useState(false)\n  const { Moralis, account } = useMoralis()\n  const postObject = useNewMoralisObject('Post')\n  const commentObject = useNewMoralisObject('Comment')\n\n  useEffect(() => {\n    async function getTweets() {\n      setLoading(true)\n      try {\n        const Tweets = Moralis.Object.extend('Posts')\n        const query = new Moralis.Query(Tweets)\n        if (profile) {\n          query.equalTo('tweeterAcc', account)\n        }\n        const results = await query.find()\n        console.log('🚀results', results)\n\n        setTweetArr(results)\n        setLoading(false)\n      } catch (error) {\n        console.error(error)\n      }\n    }\n    getTweets()\n  }, [profile])\n\n  const getComments = async (post) => {\n    console.log('everything', post)\n    const results = await fetch()\n    console.log('🚀results', results)\n    // alert('Successfully retrieved ' + results.length + ' monsters.')\n\n    // const basicQuery = async () => {\n    //   const results = await fetch()\n    //   alert('Successfully retrieved ' + results.length + ' monsters.')\n    // Do something with the returned Moralis.Object values\n    // for (let i = 0; i < results.length; i++) {\n    //   const object = results[i]\n    //   alert(object.id + ' - ' + object.get('ownerName'))\n    // }\n    // }\n\n    // Assume Moralis.Object myPost was previously created.\n    // const query = new Moralis.Query('Comment')\n    // query.equalTo('Post', post)\n    // const comments = await query.find()\n    // console.log('🚀$$$$getComments ~ comments', comments)\n  }\n\n  /*\n\n   i need to create a func to make a comment\n   use Moralis function\n   use the post.id, the content & wAddress\n\n  */\n  const makeComment = async (post) => {\n    console.log('everything', post)\n    const postId = post.id\n    const attributes = post.attributes\n    console.log('attributes###', attributes)\n\n    // const postData = {\n    //   title: '333',\n    //   content: 'ARE YOU WORKING 333',\n    //   belongsTo: ,\n    // }\n    attributes.belongsTo = 'q6id19lqMwPHnFLSmzbaAcjt'\n    console.log('attributes 22', attributes)\n\n    // const commentData = {\n    //   content: 'SOCCER1',\n    //   parent: await postObject.save(post),\n    // }\n\n    // commentObject.save(commentData, {\n    //   onSuccess: (comment) => console.log(comment),\n    //   onError: (error) => console.log(error),\n    // })\n  }\n\n  const makePost = async () => {\n    const postData = {\n      title: '444',\n      content: 'ARE YOU WORKING 333',\n      arrComments: ['Good', 'Morning'],\n    }\n\n    const commentData = {\n      content: '444 comment.',\n      parent: await postObject.save(postData),\n    }\n\n    commentObject.save(commentData, {\n      onSuccess: (comment) => console.log(comment),\n      onError: (error) => console.log(error),\n    })\n  }\n\n  const createComment = async (post) => {\n    // const postId = post.id\n    // navigate(`/details/${postId}`)\n\n    console.log('🚀post', post)\n\n    const commentData = {\n      content: '123 I would love to get it.',\n      walletAddress: '123454566',\n      parent: await post.save(),\n    }\n\n    commentObject.save(commentData, {\n      onSuccess: (comment) => console.log(comment),\n      onError: (error) => console.log(error),\n    })\n  }\n  const { fetch } = useMoralisQuery(\n    'Post',\n    (query) => query.equalTo('objectId', 'hu4BHFuCFszaiQEPhcHAcOye'),\n    [],\n    { autoFetch: false },\n  )\n\n  const updateComment = async (post) => {\n    const postId = post.id\n    const newComment = '10'\n    // connects to db\n    const current = Moralis.Object.extend('Posts')\n    // creates a reference to element\n    const query = new Moralis.Query(current)\n\n    //  it gets the element obj\n    const t = await query.first()\n\n    // gets the field to update & change it\n    const arr = post.attributes.comments\n    arr.push(newComment)\n    t.set('comments', arr)\n    t.save()\n  }\n\n  const goToPostDetails = (post) => {\n    setCurrentPost(post)\n    const postId = post.id\n    navigate(`/details`)\n  }\n\n  return (\n    <>\n      {tweetArr\n        ?.map((e, idx) => {\n          return (\n            <div className=\"tweet-feed-container\" key={idx}>\n              <Card sx={{ minWidth: 245 }} onClick={() => goToPostDetails(e)}>\n                <div className=\"feedTweet\">\n                  <img\n                    src={\n                      e.attributes.tweeterPfp\n                        ? e.attributes.tweeterPfp\n                        : defaultImgs[0]\n                    }\n                    className=\"profilePic\"\n                    alt=\"img-tweet\"\n                  ></img>\n                  <div className=\"completeTweet\">\n                    <div className=\"who\">\n                      {e.attributes.tweeterUserName.slice(0, 6)}\n                      <div className=\"accWhen\">\n                        {`${e.attributes.tweeterAcc.slice(\n                          0,\n                          4,\n                        )}...${e.attributes.tweeterAcc.slice(38)} ·\n                        ${e.attributes.createdAt.toLocaleString('en-us', {\n                          month: 'short',\n                        })}\n                        ${e.attributes.createdAt.toLocaleString('en-us', {\n                          day: 'numeric',\n                        })}\n                        `}\n                      </div>\n                    </div>\n                    <div className=\"tweetContent\">\n                      {e.attributes.tweetTxt}\n                      {e.attributes.tweetImg && (\n                        <img\n                          src={e.attributes.tweetImg}\n                          className=\"tweetImg\"\n                          alt=\"ig\"\n                        ></img>\n                      )}\n                    </div>\n                    <div className=\"interactions\">\n                      <div className=\"interactionNums\">\n                        <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\" />\n                      </div>\n                      <div className=\"interactionNums\">\n                        <Icon fill=\"#3f3f3f\" size={20} svg=\"star\" />\n                        12\n                      </div>\n                      <div className=\"interactionNums\">\n                        <Icon fill=\"#3f3f3f\" size={20} svg=\"matic\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            </div>\n          )\n        })\n        .reverse()}\n    </>\n  )\n}\n\nexport default TweetInFeed\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from 'firebase/firestore';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDAdZYDPPvz-YWPGq4DhlQIhUDdraUwyFI\",\n  authDomain: \"buy-nothing-projec.firebaseapp.com\",\n  projectId: \"buy-nothing-projec\",\n  storageBucket: \"buy-nothing-projec.appspot.com\",\n  messagingSenderId: \"186058339500\",\n  appId: \"1:186058339500:web:c3518b88d14d73edf95b09\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const fstore = getFirestore(app);\n","export const apiKey =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDRGRDgwNDEwNTVjM0E1NjgyM2NBMDk4NDExZjkzNGU3NTQ0RDI2YTkiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTYzMzYzOTYzNDcwNSwibmFtZSI6ImNvbW11bml0eSBnYXJkZW4ifQ.4vcBo0Irc2tA65oi6y4iyvOHor18zET0mqtbbe-1-sY'\n","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport PhotoCamera from '@material-ui/icons/PhotoCamera'\nimport './AddBeat.css'\nimport {\n  TextField,\n  Container,\n  StylesProvider,\n  Button,\n  IconButton,\n  MenuItem,\n} from '@material-ui/core'\nimport { NFTStorage, File } from 'nft.storage'\nimport { createRef } from 'react'\nimport { apiKey } from '../../APIKEYS'\n\nfunction AddBeat() {\n  const navigate = useNavigate()\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState('')\n  const petTypeRef = createRef()\n  const [artistName, setArtistName] = useState('')\n  const [beatName, setBeatName] = useState('')\n  const [imageName, setImageName] = useState('')\n  const [imageType, setImageType] = useState('')\n  const [petType, setPetType] = useState('')\n\n  const handleImage = (event) => {\n    setImage(event.target.files[0])\n    setImageName(event.target.files[0].name)\n    setImageType(event.target.files[0].type)\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    console.log('update*****', artistName, beatName, petType)\n\n    try {\n      setLoading(true)\n      const client = new NFTStorage({ token: apiKey })\n      const metadata = await client.store({\n        name: artistName,\n        description: `${beatName}, ${petType}`,\n        image: new File([image], imageName, { type: imageType }),\n      })\n      if (metadata) {\n        navigate('/store')\n      }\n    } catch (error) {\n      console.log(error)\n      setLoading(false)\n    }\n  }\n\n  return (\n    <StylesProvider injectFirst>\n      <Container\n        className=\"root-create-pet\"\n        style={{ minHeight: '70vh', paddingBottom: '3rem' }}\n      >\n        <div>\n          <br />\n\n          <h2> Post your music and show the world your talent.</h2>\n\n          {/* Add Form */}\n          {image ? (\n            <img\n              src={URL.createObjectURL(image)}\n              alt=\"pet\"\n              className=\"img-preview\"\n            />\n          ) : (\n            ''\n          )}\n          <div className=\"form-container\">\n            <form className=\"form\" noValidate autoComplete=\"off\">\n              <input\n                accept=\"image/*\"\n                className=\"input\"\n                id=\"icon-button-photo\"\n                defaultValue={image}\n                onChange={handleImage}\n                type=\"file\"\n              />\n              <label htmlFor=\"icon-button-photo\">\n                <IconButton color=\"primary\" component=\"span\">\n                  <PhotoCamera />\n                </IconButton>\n              </label>\n              <TextField\n                fullWidth\n                id=\"outlined-basic\"\n                label=\"Artist's name\"\n                variant=\"outlined\"\n                className=\"text-field\"\n                defaultValue={artistName}\n                onChange={(e) => setArtistName(e.target.value)}\n              />\n              <br />\n              <TextField\n                fullWidth\n                id=\"outlined-basic\"\n                label=\"Beat's name\"\n                variant=\"outlined\"\n                className=\"text-field\"\n                defaultValue={beatName}\n                onChange={(e) => setBeatName(e.target.value)}\n              />\n              <br />\n              <TextField\n                fullWidth\n                name=\"petType\"\n                select\n                label=\"Beat Type\"\n                variant=\"outlined\"\n                className=\"text-field\"\n                onChange={(e) => setPetType(e.target.value)}\n                defaultValue=\"\"\n                ref={petTypeRef}\n              >\n                <MenuItem value=\"Hip Hop\">Hip Hop</MenuItem>\n                <MenuItem value=\"Classic\">Classic</MenuItem>\n                <MenuItem value=\"Pop\">Pop</MenuItem>\n                <MenuItem\n                  value=\"\n                Country\"\n                >\n                  Country\n                </MenuItem>\n                <MenuItem value=\"Regge\">Regge</MenuItem>\n                <MenuItem value=\"Latin\">Latin</MenuItem>\n                <MenuItem value=\"House\">House</MenuItem>\n                <MenuItem value=\"Rap \">Rap</MenuItem>\n                <MenuItem value=\"Other\">Other</MenuItem>\n              </TextField>\n              <br />\n              <Button\n                size=\"large\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleSubmit}\n              >\n                Submit\n              </Button>\n            </form>\n          </div>\n        </div>\n      </Container>\n    </StylesProvider>\n  )\n}\n\nexport default AddBeat\n","import React, { useState, useEffect } from 'react'\nimport { StylesProvider } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport { CircularProgress, Typography, Box } from '@material-ui/core'\n\nfunction CircularProgressWithLabel(props) {\n  return (\n    <div\n      style={{\n        height: 'auto',\n        textAlign: 'center',\n        justifyContent: 'center',\n        paddingTop: '5rem',\n      }}\n    >\n      <Box position=\"relative\" display=\"inline-flex\">\n        <CircularProgress\n          variant=\"determinate\"\n          {...props}\n          style={{ width: '200px', height: '200px' }}\n        />\n        <Box\n          top={0}\n          left={0}\n          bottom={0}\n          right={0}\n          position=\"absolute\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Typography\n            variant=\"caption\"\n            component=\"div\"\n            color=\"textSecondary\"\n            style={{ fontSize: '1rem' }}\n          >\n            {`${Math.round(props.value)}%`}\n          </Typography>\n        </Box>\n      </Box>\n    </div>\n  )\n}\n\nCircularProgressWithLabel.protoTypes = {\n  value: PropTypes.number.isRequired,\n}\n\nexport default function CircularStatic() {\n  const [progress, setPogress] = useState(10)\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setPogress((prevProgress) =>\n        prevProgress >= 100 ? 0 : prevProgress + 10,\n      )\n    }, 800)\n    return () => {\n      clearInterval(timer)\n    }\n  }, [])\n\n  return <CircularProgressWithLabel value={progress} />\n}\n","export default __webpack_public_path__ + \"static/media/play1.50c1be86.png\";","export default __webpack_public_path__ + \"static/media/beat1.e1f33b37.mp3\";","import React, { useEffect, useState } from 'react'\nimport CircularStatic from '../commons/CircularProgressWithLabel'\nimport ImageListItem from '@material-ui/core/ImageListItem'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar'\nimport { Grid, Container } from '@material-ui/core'\nimport './BeatsList.css'\nimport { apiKey } from '../../APIKEYS'\nimport { Link } from 'react-router-dom'\nimport play1 from './play1.png'\nimport beat1 from './beat1.mp3'\n\nfunction BeatsList() {\n  const [beatsData, setBeatsData] = useState([])\n  console.log('🚀 beatsData', beatsData)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    const loadBeats = async () => {\n      try {\n        setLoading(true)\n        let cids = await fetch('https://api.nft.storage', {\n          headers: {\n            Authorization: `Bearer ${apiKey}`,\n            'Content-Type': 'application/json',\n            limit: 100,\n          },\n        })\n        cids = await cids.json()\n        const temp = []\n        for (let cid of cids.value) {\n          if (cid?.cid) {\n            let data = await fetch(\n              `https://ipfs.io/ipfs/${cid.cid}/metadata.json`,\n            )\n            data = await data.json()\n\n            const getImage = (ipfsURL) => {\n              if (!ipfsURL) return\n              ipfsURL = ipfsURL.split('://')\n              return 'https://ipfs.io/ipfs/' + ipfsURL[1]\n            }\n\n            data.image = await getImage(data.image)\n            data.cid = cid.cid\n            data.created = cid.created\n            temp.push(data)\n          }\n        }\n        setBeatsData(temp)\n        setLoading(false)\n      } catch (error) {\n        console.log(error)\n        setLoading(false)\n      }\n    }\n    loadBeats()\n  }, [])\n\n  const play = (e) => {\n    console.log('e', e)\n  }\n\n  const playAudio = (e) => {\n    new Audio(beat1).play()\n  }\n  return (\n    <div\n      style={{\n        minHeight: '70vh',\n        paddingBottom: '6rem',\n        paddingTop: '7rem',\n        backgroundColor: '#2b2828',\n      }}\n    >\n      <Container>\n        {loading ? (\n          <CircularStatic />\n        ) : (\n          <div style={{ flexGrow: 1 }}>\n            <Grid container spacing={1}>\n              {beatsData.length ? (\n                beatsData.map((pet, index) => (\n                  <Grid item xs={6} sm={3} key={index}>\n                    <ImageListItem\n                      style={{ height: '350px', listStyle: 'none' }}\n                    >\n                      <img src={pet.image} alt={pet.name} />\n                      <ImageListItemBar\n                        title={pet.name}\n                        subtitle={<span> {pet.description}</span>}\n                        actionIcon={\n                          <IconButton\n                            aria-label={`info about ${pet.name}`}\n                            className=\"icon\"\n                          >\n                            {/* <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              component={Link}\n                              to={`/card-details/${pet.cid}`}\n                              // className=\"view-btn\"\n                              // color=\"primary\"\n                            >\n\n                            </Button> */}\n\n                            <img\n                              src={play1}\n                              alt=\"\"\n                              className=\"play1\"\n                              onClick={playAudio}\n                            />\n                          </IconButton>\n                        }\n                      />\n                    </ImageListItem>\n                  </Grid>\n                ))\n              ) : (\n                <h2>No Beats Records yet...</h2>\n              )}\n            </Grid>\n          </div>\n        )}\n      </Container>\n    </div>\n  )\n}\n\nexport default BeatsList\n","export default __webpack_public_path__ + \"static/media/browse.70550f37.png\";","export default __webpack_public_path__ + \"static/media/1.d7a0dd63.png\";","export default __webpack_public_path__ + \"static/media/join.e30371e8.gif\";","export default __webpack_public_path__ + \"static/media/header.c4e0f333.png\";","export default __webpack_public_path__ + \"static/media/i01.1fb7cd04.svg\";","export default __webpack_public_path__ + \"static/media/giphy-1.d3d1f8bd.gif\";","export default __webpack_public_path__ + \"static/media/i02.3853aae6.gif\";","export default __webpack_public_path__ + \"static/media/i03.cd2b0745.gif\";","import React from 'react'\nimport clsx from 'clsx'\nimport {\n  Container,\n  Button,\n  Paper,\n  Grid,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  IconButton,\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardActions,\n  CardContent,\n  Typography,\n} from '@material-ui/core'\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\nimport img from './header.png'\nimport i01 from './i01.svg'\nimport join from './join.gif'\nimport start from './giphy-1.gif'\nimport i02 from './i02.gif'\nimport i03 from './i03.gif'\n// import communityImg from './../../img/a.png'\n// import metamakImg from './../../img/metamask.png'\n// import exploreImg from './../../img/de-fi.jpeg'\n// import learnImg from './../../img/learn.png'\n\nimport './LandingPage.css'\n// import { HeroBanner } from './heroBanner/HeroBanner'\n// import Reviews from './reviews/Reviews'\n\nexport const Landing = () => {\n  const tileData = [\n    {\n      title: 'Oasis Network',\n      img:\n        'https://images.unsplash.com/photo-1556761175-5973dc0f32e7?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1490&q=80',\n    },\n    {\n      title: 'Polygon',\n      img:\n        'https://images.unsplash.com/photo-1553484771-371a605b060b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1950&q=80',\n    },\n    {\n      title: 'Super Fluid',\n      img:\n        'https://images.unsplash.com/photo-1434626881859-194d67b2b86f?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1953&q=80',\n    },\n    {\n      title: 'Eth Foundation',\n      img:\n        'https://images.unsplash.com/photo-1593080358201-08e4ff5f93d9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8NTB8fGJsb2NrY2hhaW4lMjB0ZWNob25sb2d5fGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=400&q=60',\n    },\n  ]\n\n  return (\n    <div className=\"d\">\n      {/* <HeroBanner /> */}\n      <Container maxWidth=\"lg\">\n        <div className=\"welcome-section\">\n          <h2 className=\"welcome\">Welcome to SoundClick</h2>\n          <p className=\"description\">\n            An Ecosystem built to support the use and the growth of Music\n            projects by enabling participants to actively get involved in the\n            network via theoretical and interactive educational content provided\n            by the active communities of established Music projects.\n          </p>\n        </div>\n\n        <div className=\"join-section\">\n          <Grid container spacing={3}>\n            <Grid item xs={3}>\n              <Paper className=\"paper\">\n                <img src={join} alt=\"\" className=\"steps\" />\n                <h3>Join SoundClick </h3>\n                <p>\n                  SoundClick is dedicated space for your community to come\n                  together, ask and answer questions, and have open-ended\n                  conversations.\n                </p>\n              </Paper>\n            </Grid>\n\n            <Grid item xs={3}>\n              <Paper className=\"paper\">\n                <img src={start} alt=\"\" className=\"steps\" />\n                <h3>Get Started</h3>\n                <p>\n                  Start exploring Music through our blockchain applications in\n                  seconds. Trusted by over 1 million users worldwide.\n                </p>\n              </Paper>\n            </Grid>\n\n            <Grid item xs={3}>\n              <Paper className=\"paper\">\n                <img src={i02} alt=\"\" className=\"steps\" />\n                <h3>Get Involved</h3>\n                <p>\n                  SoundClick allow user to sale, buy, exchange beats within our\n                  platform. Get involve today and discover our marketplace.\n                </p>\n              </Paper>\n            </Grid>\n\n            <Grid item xs={3}>\n              <Paper className=\"paper\">\n                <img src={i03} alt=\"\" className=\"steps\" />\n                <h3>Contribute</h3>\n                <p>\n                  It's a program that supports people who create music, beats,\n                  mixes and more. Creators receive tokens and get to showcase\n                  their music.\n                </p>\n              </Paper>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    </div>\n  )\n}\n","import React from 'react'\nimport './LandingPage.css'\nimport browse from './browse.png'\nimport img from './1.png'\nimport { Landing } from '../landing-page/Landing'\n\nexport default function LandingPage() {\n  return (\n    <div className=\"landing-container\">\n      <div className=\"landing-header\">\n        <img className=\"img-reponsive\" src={img} alt=\"demo_img\" />\n      </div>\n      <Landing />\n      <br />\n      <br />\n      <br />\n      <h2 class=\"_2SHVO\">Browse Top Beats</h2>\n      <img className=\"img-reponsive\" src={browse} alt=\"demo_img\" />\n      <div align=\"center\">\n        <br />\n        <br />\n        <br />\n        <img\n          src=\"https://duckduckgo.com/i/7f3d4ac9.png\"\n          height=\"200px\"\n          width=\"200px\"\n          className=\"\"\n          alt=\"Logo\"\n        />\n        <br />\n        <br />\n        <p className=\"description desc1\">\n          SoundClick was created for you; the writer, the performer, the beat\n          maker, the producer, the engineer, the record label, the publisher,\n          the videographer, the artist and the CREATOR. Beat Heat was built for\n          the person telling their story with music and to find like-minded\n          people to experience it with. Music is the universal language that\n          connects us across the globe. Music brings out our human emotions and\n          music is the unified voice of the people.\n        </p>\n      </div>\n      <br />\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/avatar.5c81ad97.png\";","import { Link } from 'react-router-dom'\nimport { TextArea, Icon } from 'web3uikit'\nimport React, { useState } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Container from '@material-ui/core/Container'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport { StylesProvider } from '@material-ui/core/styles'\nimport guestImg from '../../images/avatar.png'\nimport { defaultImgs } from '../../defaultimgs'\nimport './PostDetails.css'\nimport {\n  useMoralis,\n  useWeb3ExecuteFunction,\n} from 'react-moralis'\n\nfunction PostDetails({ account, contractData, currentPost, udUser }) {\n  const { Moralis } = useMoralis()\n  const [tweet, setTweet] = useState()\n\n  const updateComment = async () => {\n    const postId = currentPost.id\n    // connects to db\n    const current = Moralis.Object.extend('Posts')\n    // creates a reference to element\n    let query = new Moralis.Query(current)\n    // gets correct post by postId\n    query = query.equalTo('objectId', postId)\n    //  it gets the element obj\n    const t = await query.first()\n    // gets the field to update & change it\n    const arr = currentPost.attributes.comments\n    arr.unshift(tweet)\n    t.set('comments', arr)\n    setTweet('')\n    // t.set('walletAddress', udUser ? udUser : 'Guest User')\n    t.save()\n  }\n\n\n  return (\n    <StylesProvider injectFirst>\n      <Container className=\"root-pet-details\">\n        <div className=\"comments-container\">\n          {currentPost ? (\n            <Grid container spacing={3}>\n              <Card sx={{ width: `calc(100% + '24px')` }}>\n                <p\n                  style={{\n                    paddingRight: '1rem',\n                    paddingTop: '4rem',\n                    fontWeight: 'bold',\n                    textAlign: 'end',\n                  }}\n                >\n                  Post / Details\n                </p>\n                <div className=\"feedTweet2\">\n                  <img\n                    src={\n                      currentPost.attributes.tweeterPfp\n                        ? currentPost.attributes.tweeterPfp\n                        : defaultImgs[0]\n                    }\n                    className=\"profilePic\"\n                    alt=\"img-tweet\"\n                  ></img>\n                  <div className=\"completeTweet\">\n                    <div className=\"who\">\n                      {currentPost.attributes.tweeterUserName.slice(0, 6)}\n                      <div className=\"accWhen\">\n                        {`${currentPost.attributes.tweeterAcc.slice(\n                          0,\n                          4,\n                        )}...${currentPost.attributes.tweeterAcc.slice(38)} ·\n                        ${currentPost.attributes.createdAt.toLocaleString(\n                          'en-us',\n                          {\n                            month: 'short',\n                          },\n                        )}\n                        ${currentPost.attributes.createdAt.toLocaleString(\n                          'en-us',\n                          {\n                            day: 'numeric',\n                          },\n                        )}\n                        `}\n                      </div>\n                    </div>\n                    <div className=\"tweetContent\">\n                      {currentPost.attributes.tweetTxt}\n                      {currentPost.attributes.tweetImg && (\n                        <img\n                          src={currentPost.attributes.tweetImg}\n                          className=\"tweetImg\"\n                          alt=\"ig\"\n                        ></img>\n                      )}\n                    </div>\n                    <div className=\"interactions\">\n                      <div className=\"interactionNums\">\n                        <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\" />\n                      </div>\n                      <div className=\"interactionNums\">\n                        <Icon fill=\"#3f3f3f\" size={20} svg=\"star\" />\n                        12\n                      </div>\n                      <div className=\"interactionNums\">\n                        <Icon fill=\"#3f3f3f\" size={20} svg=\"matic\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n\n              <div className=\"comments\">\n                <Card sx={{ minWidth: 245 }}>\n                  <div className=\"mainContent\">\n                    <div className=\"profileTweet\">\n                      <img\n                        src={guestImg}\n                        className=\"profilePic\"\n                        alt=\"img\"\n                      ></img>\n                      <div className=\"tweetBox\">\n                        <TextArea\n                          label=\"\"\n                          name=\"tweetTxtArea\"\n                          value={tweet}\n                          type=\"text\"\n                          id=\"input-tweet\"\n                          onChange={(e) => setTweet(e.target.value)}\n                          width=\"95%\"\n                        ></TextArea>\n                        <div className=\"imgOrTweet\">\n                          <div className=\"tweetOptions\">\n                            <div className=\"tweet\" onClick={updateComment}>\n                              Save\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </Card>\n              </div>\n              <div className=\"comments\">\n                {currentPost.attributes.comments ? (\n                  currentPost.attributes.comments.map((p, ind) => {\n                    return (\n                      <div className=\"\">\n                        <Card sx={{ width: '245px' }} key={ind}>\n                          <div className=\"feedTweet2\">\n                            <img\n                              src={guestImg}\n                              className=\"profilePic\"\n                              alt=\"img-tweet\"\n                            ></img>\n                            <div className=\"completeTweet\">\n                              <div className=\"who\">\n                                Guest user\n                                <div className=\"accWhen\">\n                                  {currentPost.attributes.createdAt.toLocaleString(\n                                    'en-us',\n                                    {\n                                      month: 'short',\n                                    },\n                                  )}\n                                  {currentPost.attributes.createdAt.toLocaleString(\n                                    'en-us',\n                                    {\n                                      day: 'numeric',\n                                    },\n                                  )}\n                                </div>\n                              </div>\n                              <div className=\"tweetContent\">{p}</div>\n                            </div>\n                          </div>\n                        </Card>\n                        <br />\n                      </div>\n                    )\n                  })\n                ) : (\n                  <h3>Loading...</h3>\n                )}\n              </div>\n            </Grid>\n          ) : (\n            <Button className=\"go-home-btn\" component={Link} to=\"/\">\n              Go Home\n            </Button>\n          )}\n        </div>\n      </Container>\n    </StylesProvider>\n  )\n}\n\nexport default PostDetails\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Profile.css'\nimport { defaultImgs } from '../defaultimgs'\nimport TweetInFeed from '../components/TweetInFeed'\nimport { useMoralis } from 'react-moralis'\n\nconst Profile = () => {\n  const { Moralis } = useMoralis()\n  const user = Moralis.User.current()\n\n  return (\n    <>\n      <div className=\"pageIdentify\">Profile</div>\n      <img\n        className=\"profileBanner\"\n        src={user.attributes.banner ? user.attributes.banner : defaultImgs[1]}\n        alt=\"profile\"\n      ></img>\n      <div className=\"pfpContainer\">\n        <img\n          className=\"profilePFP\"\n          src={user.attributes.pfp ? user.attributes.pfp : defaultImgs[0]}\n          alt=\"profile\"\n        ></img>\n        <div className=\"profileName\">\n          {user.attributes.username.slice(0, 6)}\n        </div>\n        <div className=\"profileWallet\">{`${user.attributes.ethAddress.slice(\n          0,\n          4,\n        )}...\n            ${user.attributes.ethAddress.slice(38)}`}</div>\n        <Link to=\"/settings\">\n          <div className=\"profileEdit\">Edit profile</div>\n        </Link>\n        <div className=\"profileBio\">{user.attributes.bio}</div>\n        <div className=\"profileTabs\">\n          <div className=\"profileTab\">Your Tweets</div>\n        </div>\n      </div>\n      <TweetInFeed profile={true}></TweetInFeed>\n    </>\n  )\n}\n\nexport default Profile\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Settings.css'\nimport { useState, useRef, useEffect } from 'react'\nimport { Input } from 'web3uikit'\nimport pfp1 from '../images/pfp1.png'\nimport pfp2 from '../images/pfp2.png'\nimport pfp3 from '../images/pfp3.png'\nimport pfp4 from '../images/pfp4.png'\nimport pfp5 from '../images/pfp5.png'\nimport { defaultImgs } from '../defaultimgs'\nimport { useMoralis, useMoralisWeb3Api } from 'react-moralis'\n\nconst Settings = () => {\n  const [pfps, setPfps] = useState([])\n  const [selectedPFP, setSelectedPFP] = useState()\n  const inputFile = useRef(null)\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1])\n  const [theFile, setTheFile] = useState()\n  const [username, setUsername] = useState()\n  const [bio, setBio] = useState()\n  const { Moralis, isAuthenticated, account } = useMoralis()\n  const Web3Api = useMoralisWeb3Api()\n\n  const resolveLink = (url) => {\n    if (!url || !url.includes('ipfs://')) return url\n    return url.replace('ipfs://', 'https://gateway.ipfs.io/ipfs/')\n  }\n\n  useEffect(() => {\n    const fetchNFTs = async () => {\n      const options = {\n        chain: 'mumbai',\n        address: account,\n      }\n\n      const mumbaiNFTs = await Web3Api.account.getNFTs(options)\n      const images = mumbaiNFTs.result.map((e) =>\n        resolveLink(JSON.parse(e.metadata)?.image),\n      )\n      setPfps(images)\n    }\n\n    fetchNFTs()\n  }, [isAuthenticated, account])\n\n  const onBannerClick = () => {\n    inputFile.current.click()\n  }\n\n  const changeHandler = (event) => {\n    const img = event.target.files[0]\n    setTheFile(img)\n    setSelectedFile(URL.createObjectURL(img))\n  }\n\n  const saveEdits = async () => {\n    const User = Moralis.Object.extend('_User')\n    const query = new Moralis.Query(User)\n    const myDetails = await query.first()\n\n    if (bio) {\n      myDetails.set('bio', bio)\n    }\n\n    if (selectedPFP) {\n      myDetails.set('pfp', selectedPFP)\n    }\n\n    if (username) {\n      myDetails.set('username', username)\n    }\n\n    if (theFile) {\n      const data = theFile\n      const file = new Moralis.File(data.name, data)\n      await file.saveIPFS()\n      myDetails.set('banner', file.ipfs())\n    }\n\n    await myDetails.save()\n    window.location.reload()\n  }\n\n  return (\n    <>\n      <div className=\"pageIdentify\">Settings</div>\n      <div className=\"settingsPage\">\n        <Input\n          label=\"Name\"\n          name=\"NameChange\"\n          width=\"100%\"\n          labelBgColor=\"#fff\"\n          onChange={(e) => setUsername(e.target.value)}\n        />\n\n        <Input\n          label=\"Bio\"\n          name=\"bioChange\"\n          width=\"100%\"\n          labelBgColor=\"#fff\"\n          onChange={(e) => setBio(e.target.value)}\n        />\n\n        <div className=\"pfp\">\n          Profile Image (Your NFTs)\n          <div className=\"pfpOptions\">\n            {pfps.map((e, i) => {\n              return (\n                <>\n                  <img\n                    src={e}\n                    className={\n                      selectedPFP === e ? 'pfpOptionSelected' : 'pfpOption'\n                    }\n                    onClick={() => {\n                      setSelectedPFP(pfps[i])\n                    }}\n                    alt=\"bio\"\n                  ></img>\n                </>\n              )\n            })}\n          </div>\n        </div>\n\n        <div className=\"pfp\">\n          Profile Banner\n          <div className=\"pfpOptions\">\n            <img\n              src={selectedFile}\n              onClick={onBannerClick}\n              className=\"banner\"\n              alt=\"profile\"\n            ></img>\n            <input\n              type=\"file\"\n              name=\"file\"\n              ref={inputFile}\n              onChange={changeHandler}\n              style={{ display: 'none' }}\n            />\n          </div>\n        </div>\n        <div className=\"save\" onClick={() => saveEdits()}>\n          Save\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Settings\n","export default __webpack_public_path__ + \"static/media/pfp1.394c20a6.png\";","export default __webpack_public_path__ + \"static/media/pfp2.77db00e7.png\";","export default __webpack_public_path__ + \"static/media/pfp3.63c3a335.png\";","export default __webpack_public_path__ + \"static/media/pfp4.b4e70662.png\";","export default __webpack_public_path__ + \"static/media/pfp5.ba3d30f6.png\";","export default __webpack_public_path__ + \"static/media/logo_official.e1a65443.png\";","import React, { useState } from 'react'\n\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport VerifiedUserSharpIcon from '@material-ui/icons/VerifiedUserSharp'\nimport Badge from '@material-ui/core/Badge'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport MailIcon from '@material-ui/icons/Mail'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport { StylesProvider } from '@material-ui/core/styles'\nimport './Navbar.css'\nimport logo from '../../../images/logo_official.png'\nimport UAuth from '@uauth/js'\n\nfunction withRouter(Component) {\n  function ComponentWithRouterProp(props) {\n    let location = useLocation()\n    let navigate = useNavigate()\n    let params = useParams()\n    return <Component {...props} router={{ location, navigate, params }} />\n  }\n\n  return ComponentWithRouterProp\n}\n\nexport const Navbar = withRouter(({ connectWallet, udUser, userLogOut }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null)\n  const isMenuOpen = Boolean(anchorEl)\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null)\n  }\n\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n    handleMobileMenuClose()\n  }\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget)\n  }\n\n  const menuId = 'primary-search-account-menu'\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  )\n\n  const mobileMenuId = 'primary-search-account-menu-mobile'\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  )\n\n  return (\n    <StylesProvider injectFirst>\n      <div className=\"grow\">\n        <AppBar position=\"fixed\">\n          <Toolbar>\n            <Button className=\"\">\n              <img\n                src=\"https://duckduckgo.com/i/7f3d4ac9.png\"\n                alt=\"logo\"\n                className=\"logo\"\n              />\n              Sound Click\n            </Button>\n\n            <Button className=\"whiteLink\" component={Link} to=\"/\">\n              Home\n            </Button>\n\n            <Button className=\"whiteLink\" component={Link} to=\"/store\">\n              Store\n            </Button>\n\n            {/* <Button className=\"whiteLink\" component={Link} to=\"/profile\">\n              Profile\n            </Button> */}\n\n            <Button className=\"whiteLink\" component={Link} to=\"/add-beat\">\n              Add-Beat\n            </Button>\n\n            <div className=\"grow\" />\n            <div className=\"sectionDesktop\">\n              {udUser ? (\n                <>\n                  <Button\n                    variant=\"contained\"\n                    className=\"connected-btn\"\n                    endIcon={<VerifiedUserSharpIcon />}\n                  >\n                    {udUser}\n                  </Button>\n                  <Button className=\"whiteLink\" onClick={() => userLogOut()}>\n                    Logout\n                  </Button>\n                </>\n              ) : (\n                <Button\n                  variant=\"contained\"\n                  className=\"connected-btn\"\n                  onClick={() => connectWallet()}\n                >\n                  Connect Wallet\n                </Button>\n              )}\n            </div>\n          </Toolbar>\n        </AppBar>\n        {renderMobileMenu}\n        {renderMenu}\n      </div>\n    </StylesProvider>\n  )\n})\n","export default __webpack_public_path__ + \"static/media/recent.3b1616c9.png\";","export default __webpack_public_path__ + \"static/media/recent2.8837cd27.png\";","import { UAuthMoralisConnector } from '@uauth/moralis'\n\n// Instantiate your other connectors.\nexport const injected = {}\n\nexport const walletconnect = { provider: 'walletconnect' }\n\n// This info comes from unstoppable dashboard\nUAuthMoralisConnector.setUAuthOptions({\n  clientID: \"66e7182b-b397-4b8b-905a-be32eab9da67\",\n  redirectUri: \"https://sound-click.netlify.app/\",\n  scope: \"openid wallet\",\n  // Scope must include openid and wallet\n  // Injected and walletconnect connectors are required\n  connectors: { injected, walletconnect },\n})\n\nexport const uauth = { connector: UAuthMoralisConnector }\n\nconst connectors = {\n  uauth,\n}\n\nexport default connectors\n\n// import { UAuthMoralisConnector } from '@uauth/moralis'\n\n// // Instantiate your other connectors.\n// export const injected = {}\n\n// export const walletconnect = { provider: 'walletconnect' }\n\n// UAuthMoralisConnector.setUAuthOptions({\n//   clientID: '7f929f6c-5b4c-4fc6-a803-a56cc3de94da',\n//   redirectUri: 'http://localhost:3000',\n//   // fallbackIssuer: process.env.REACT_APP_FALLBACK_ISSUER!,\n//   // Scope must include openid and wallet\n//   scope: 'openid wallet',\n//   // Injected and walletconnect connectors are required\n//   connectors: { injected, walletconnect },\n// })\n\n// export const uauth = { connector: UAuthMoralisConnector }\n\n// // add it\n// const connectors = {\n//   uauth,\n// }\n\n// export default connectors\n","import React, { useState, useEffect } from 'react'\nimport { Routes, Route } from 'react-router-dom'\nimport './App.css'\nimport Home from './pages/Home'\nimport CreatePost from './pages/create-post/CreatePost'\nimport AddBeat from './pages/add-beat/AddBeat'\nimport BeatsList from './pages/beats-list/BeatsList'\nimport LandingPage from './pages/landing-page/LandingPage'\nimport Landing from './pages/landing-page/Landing'\nimport PostDetails from './pages/post-details/PostDetails'\nimport Profile from './pages/Profile'\nimport Settings from './pages/Settings'\nimport { Navbar } from './images/layout/navbar/Navbar'\nimport Rightbar from './components/Rightbar'\nimport Button from '@mui/material/Button'\nimport LoginIcon from '@mui/icons-material/Login'\nimport logo from './images/logo_official.png'\nimport { UAuthMoralisConnector } from '@uauth/moralis'\nimport { useMoralis } from 'react-moralis'\nimport { uauth } from './connectors'\nimport UAuth from '@uauth/js'\n\nconst App = () => {\n  const { isAuthenticated, logout, authenticate } = useMoralis()\n  const uauthMoralisConnector = new UAuthMoralisConnector()\n  const [udUser, setudUser] = useState(null)\n  const [wallet, setWallet] = useState(null)\n  const [userInfo, setUserInfo] = useState(null)\n  const [currentPost, setCurrentPost] = useState(null)\n\n  useEffect(() => {\n    const getUdNameLocal = localStorage.getItem('udName')\n    setudUser(getUdNameLocal)\n  }, [udUser])\n\n  const unstoppableLogin = new UAuth({\n    clientID: '66e7182b-b397-4b8b-905a-be32eab9da67',\n    redirectUri: 'https://sound-click.netlify.app/',\n    scope: 'openid wallet',\n  })\n\n  const userLogIn = async () => {\n    try {\n      const userUnstopple = await unstoppableLogin.loginWithPopup()\n\n      let user = await authenticate(uauth)\n      let domainDetials = uauthMoralisConnector.uauth.user()\n      const udName = (await domainDetials).sub\n      console.log('is This  udName', udName)\n      const wallet = (await domainDetials).wallet_address\n\n      setWallet(wallet)\n      setUserInfo(userUnstopple)\n\n      if (udName) {\n        localStorage.setItem('udName', udName)\n      }\n\n      setudUser(udName)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  const userLogOut = () => {\n    localStorage.removeItem('udName')\n    setudUser('')\n    logout()\n  }\n\n  return (\n    <>\n      <Navbar udUser={udUser} userLogOut={userLogOut} />\n      {isAuthenticated ? (\n        <div className=\"\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<LandingPage setCurrentPost={setCurrentPost} />}\n            />\n            <Route\n              path=\"/store\"\n              element={<BeatsList setCurrentPost={setCurrentPost} />}\n            />\n            {/* <Route\n              path=\"/store\"\n              element={<Home setCurrentPost={setCurrentPost} />}\n            /> */}\n            <Route path=\"/add-beat\" element={<AddBeat />} />\n            <Route\n              path=\"/details\"\n              element={\n                <PostDetails currentPost={currentPost} udUser={udUser} />\n              }\n            />\n            <Route path=\"/profile\" element={<Profile />} />\n            <Route path=\"/settings\" element={<Settings />} />\n          </Routes>\n        </div>\n      ) : (\n        <div className=\"loginPage\">\n          <h2> Log in to continue</h2>\n\n          <Button\n            onClick={userLogIn}\n            variant=\"contained\"\n            style={{ backgroundColor: 'red' }}\n            endIcon={<LoginIcon />}\n          >\n            Login\n          </Button>\n          <img\n            src=\"https://duckduckgo.com/i/7f3d4ac9.png\"\n            height=\"200px\"\n            width=\"200px\"\n            className=\"\"\n            alt=\"Logo\"\n          />\n        </div>\n      )}\n    </>\n  )\n}\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter } from 'react-router-dom'\nimport { MoralisProvider } from 'react-moralis'\nimport { NotificationProvider } from 'web3uikit'\n\nReactDOM.render(\n  <React.StrictMode>\n    <MoralisProvider\n      appId=\"TQxYJGs2BO1EhQYE6UOq3MXhmtjof3opg9ifB4CP\"\n      serverUrl=\"https://ncgqettvx5zg.usemoralis.com:2053/server\"\n    >\n      <NotificationProvider>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </NotificationProvider>\n    </MoralisProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}